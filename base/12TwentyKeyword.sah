/***************************************
	FileName	:	12TwentyKeyword.sah
	Description	 :   Global Variables,Testcase Functions 
 
***************************************/
//File which has all Functionalites 
//Include 12Twenty Data File
_include("12TwentyConfig.sah");
//Include 12Twenty Object Repository File
_include("12TwentyOR.sah");
    //Read Filter data from Excel Sheet
    //Global Variables
    var $data;
    var $sSite ;
  	var $sGradYear;
	var $sGradTerm;
	var $sOfferTiming ;
	var $sJobPhase;
    var $sWorkAuth;
	var $sEmpType;
    var $sRumorJob;
	var $sIncludeRoport;
    var $sDegreelevel;
	var $sCollege;
    var $sDepartment;
    var $sProgram;
	var $sUndergradMajor;
    var $TestFail=0;
    var $sRunStatus;
    var $sSiteType;
    var $sSubReport;
    var $DatafileName;
    var $sReportName;
    var $sCutoffDate;
    //table data
    var $Tabledata = [];
    var $Tabledata1 = [];
  	var $arr = [];
	var $array=[];
    //data verify
    var $actual=[];
    var $expected=[];
/******************* Login ***********************/
/**********************************************
    Method name	 :  login12Twenty
    Author 	 	     :	sarita	
    Created Date  :  12/14/2015
    Description		:	This method is used to launch URL & login to 12Twenty POrtal .
    Input			  :   URL, UserName,Password
**********************************************/

//Login to 12twenty
function login12Twenty($Url, $Username, $Password)
{
    //navigate url
	_navigateTo($Url);
   //Enter Username
	_setValue(_emailbox($txt_UserName), $Username);
   //Enter Password
	_setValue(_password($txt_Password), $Password);
  //Click LOgin
	_click(_link("Log in"));
}
/*********************Read Filter Data From Excel ***************************/
/**********************************************
    Method name	 :  readFilterData
    Author 	 	     :	sarita
    Created Date  :   12/14/2015
    Description		:	This method is used to read filterdata .
    Input			  :   test case number,Report Name
**********************************************/
//read filter data				
function readFilterData($k,$sReportName)
{
  //read data file and pass the arguments path of the data file and report name
  $data = _readExcelFile($path_datafile,$sReportName);
  //read the run status
  $sRunStatus = $data[$k][$sdRunStat];
  //read the site instance type
  $sSiteType = $data[$k][$sdSiteType];
  //read site instance
  $sSite = $data[$k][$sdSiteInstanceType];
  //read graduation year
  $sGradYear = $data[$k][$sdGraduationClass];
  //rad graduation term
  $sGradTerm = $data[$k][$sdGraduationTerm];
  //read the offertiming
  $sOfferTiming = $data[$k][$sdOfferTime];
  //read job phase data
  $sJobPhase = $data[$k][$sdJobPhase];
  //read joint degree
  $sJointDegree = $data[$k][$sdJointDegree];
  //read reporting major 
  $sReportingMajor = $data[$k][$sdReportMajor];
  //get cutoff date from data file
  $sRumorJob = $data[$k][$sdIncRumorJob];
  //red include report name
  $sIncludeRoport = $data[$k][$sdIncReporting];
  //read degree level id
  $sDegreelevel = $data[$k][$sdDegreeLevel];
  //read college or school data
  $sCollege = $data[$k][$sdSc_Coll];
  //read program
  $sProgram = $data[$k][$sdPro];
  //get the under grad major from excel data
 $sUndergradMajor= $data[$k][$sdUndGrdMajor];
  //read cutoff date 
  $sCutoffDate = $data[$k][$sdCutDate];
  //read subreport name
  $sSubReport = $data[$k][$sdSubRepo];
  //read datafile name
  $DatafileName = $data[$k][$sdDataFile];  
}

/*******************Baseline Reoprts******************/
/*************MBA Standard Reports*******************/
/**********************************************
    Method name	 :  MBA_Baseline
    Author 	 	     :	venu
    Created Date  :  12/21/15
    Description		:	This method is used to Explore Baseline MBA Standard Reports  .
    Input			  :   Excel file path,Report Name
**********************************************/
//MBA Standard Reports Baseline
function MBA_Baseline($path,$stest)
{
  //read Excel data file 
  var $data1=_readExcelFile($path,$stest);
  
  //continue the script execution if failure occurs
  _continueOnError();   
  //for(var $loop=0;$loop<1;$loop++) 
  for(var $loop=0;$loop<$data1.length;$loop++) 
 {
  //read filter data  
  readFilterData($loop,$stest);  
 var $t = _testcase($DatafileName, "MBA Baseline Test");
 $t.start();
  
          //Condition for Runstatus
          if($sRunStatus==$sRunStatusValue) 
          {       _log("RunStatus Y");
                  //check site instance type  
                   if($sSiteType==$sMBA_Site_Type) 
                   {       
                           //check site instance
                            if($sSite==$sSite_Texas_FTMBA)
                           {   
                            //login to 12twenty application
                           login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                           }
                           else if($sSite==$sSite_Texas_PTMBA)
                           {
                            //login to 12twenty application
                            login12Twenty($sTexas_PTMBA,$sUsername,$sPassword);
                             _log("Login to texas mba"+$loop);
                           } 
                           else
                           {
                             //login 
                             login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                           } 
                            //navigationToMBAStandardReport();
                     		navigationToStandardReport();
                             //click on MBA Reports	
                             // _click(_link($tab_mba_report));
                            //click on subreport type
                    		_click(_link($link_generate, _near(_cell($sSubReport))));
                            //select filte values
                            selectFilterValuesMBA_Standard_Reports();
                             //condition for subreport
                     		//_log("Actu-"+$sSubReport);
                      		//_log("Report:"+$sReport_Com);
                     	 	if(_areEqual($sSubReport,$sReport_Com))
        					{  
                              	   _log("Sub Report:"+$sSubReport+"");	
                              		//Write Into CSV(MBA Compensation Report )
                              		WriteIntoMBA_Compensation_Report();                           	   
                              		                                     
                         	}                        	
                           else
                           {                             			
                                 _log("Sub Report:"+$sSubReport);
                                 _log("Report:"+$sReport_Com);
                                 _log("False");  
                                 //write UI data into CSV
                                 WriteToCSV();                                 			   
                           }
                            
                            //logout  
                            logout12Twenty();
                     	   _log($sMBA_Baseline1+$loop); 
                   }
            		else
                   {
                     		_log($sMBA_Baseline2+$loop); 
                   } 
            
          }
   		 else
         {
             _log("RunStatus N");
          }
   	
	$sSubReport = "";
  	_log("Before For loop - $sSubReport "+ $sSubReport);
  	$t.end();
 	}   
  }
 		/*********Business Week Baseline*********/
/**********************************************
    Method name	:  BusinessWeek_Baseline
    Author 	 	     :	venu
    Created Date  :  12/22/15
    Description		:	This method is used to Explore Baseline Business Week Reports  .
    Input			  :   Excel file path,Report Name
**********************************************/
//Business week baseline reports
function BusinessWeek_Baseline($path,$stest)
{  
  //read excel data file
  var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    

    for(var $loop=0;$loop<$data1.length;$loop++) 
 	 //for(var $loop=36;$loop<37;$loop++) 
     {
     //read filter data
      readFilterData($loop,$stest);   
	 var $t = _testcase($DatafileName, "BusinessWeek Baseline Test");
	 $t.start();       
              //condition for run status
              if($sRunStatus==$sRunStatusValue) 
              {      
                        _log("RunStatus Y");
                       //check site instance type 
                       if($sSiteType==$sBWR_Site_Type) 
                       {       //condition for site instance 
                                if($sSite==$sSite_Texas_FTMBA)
                               {   //login
                               		login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                               } 
                               else
                               {//login
                                 login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                               } 
                                //navigationToBusinessWeekReport();
                         		navigationToStandardReport();
                                //click on BWR reports 
                                _click(_link($tab_bwr_report));	
                                //click on subreport generate type
                                _click(_link($link_generate, _near(_cell($sSubReport))));
                                //select filter data
                                selectFilterValuesBusiness_Week_Reports();
                        		 //condition to Subreport
                                if($sSubReport==$sSubReport_BWR1)
                                {
                                  	//write into CSV file   
           		 					WriteToCSV();                                                              
                                }
                         		else if($sSubReport==$sSubReport_BWR2){
                                  		Write_BWR1();                                  		                             		
                                }
                         		else if($sSubReport==$sSubReport_BWR3)
                                {
                                		Write_BWR2();
                                }
                               else if($sSubReport==$sSubReport_BWR4||$sSubReport==$sSubReport_BWR5)
                               {
 									//write UI data into CSV file along list data
									WriteToCSV();
                                    //write list data in CSV file  
                                    writeBWR_List(); 
                               }else
                               { 
                                      //write into CSV if Salary table(Q.83-Q.87)
                                      WriteToCSV_BWR_Salary();
                                }  
                                //logout
                                logout12Twenty();
                               _log($sBWR_Baseline1+$loop);
                       }
                        else
                       {
                                _log($sBWR_Baseline2+$loop);
                       } 
                 
          }
       	 else
       	 {
         	_log("RunStatus N");
         }
	$t.end();		
    }//close for loop
}//close function
/*****************NACE Baseline*******************/
/**********************************************
    Method name	 :  NaceReports_Baseline
    Author 	 	     :	sarita
    Created Date  :   12/15/2015
    Description		:	This method is used to Explore Baseline NACE Reports  .
    Input			  :   Excel file path,Report Name
**********************************************/
//Nace Reports Baseline
function NaceReports_Baseline($path,$stest)
{    //read excel data file
	  var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    

     for(var $loop=0;$loop<$data1.length;$loop++) 
      //for(var $loop=8;$loop<12;$loop++)  
     { 
      //read filter data
      readFilterData($loop , $stest); 
	  var $t = _testcase($DatafileName, "NACE Baseline Test");
	  $t.start();	            
            //check the run status 
            if($sRunStatus==$sRunStatusValue) 
          	{  
               _log("RunStatus Y");
              	//check site instance type
                  if($sSiteType==$sNACE_Site_Type) 
                  {  
                       //check the site instance 
                       if($sSite==$sSite_Fordham)
                       { 
                       //login to fordham centralized  
                       login12Twenty($sFordham_Centralized,$sUsername,$sPassword);
                       }
                       else
                       {
                         //login to columbia centralized
                        login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                       } 
                   //navigationToNACEReport();
                   navigationToStandardReport();
                   //click on NACE Reports
                   _click(_link($tab_nace_report));
                   //click on generate report
                   _click(_link($link_generate, _near(_cell($sSubReport))));    
                   //select filter data
                   selectFilterValuesNace_Reports();
                   //write into csv
                   WriteToCSV(); 
                   //logout
                   logout12Twenty();
                   _log($sNACE_Baseline1+$loop);
               }
               else
               {
                   _log($sNACE_Baseline2+$loop);
               } 
         }
         else
         {
              _log("RunStatus N");
          }
	$t.end();	  
    }//close for loop
 }//close function

/****************NALP BaseLine****************/
/**********************************************
    Method name	:  NALP_Baseline
    Author 	 	    :	12/15/2015
    Created Date  :  venu
    Description		:	This method is used to Explore Baseline NALP Reports .
    Input			  :   Excel file path,Report Name
**********************************************/
//NALP Reports Baseline
function NALP_Baseline($path,$stest)
{  //read excel data file
  	var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    
   for(var $loop=0;$loop<$data1.length;$loop++) 
   //for(var $loop=0;$loop<2;$loop++) 
   {
      //read filter data  
      readFilterData($loop,$stest); 
	  var $t = _testcase($DatafileName, "NALP Baseline Test");
	  $t.start();      
              //check the runstatus
              if($sRunStatus==$sRunStatusValue) 
              {       //condition for site instance type 
                       if($sSiteType==$sNALP_Site_Type) 
                       {       //condition to site instance
                                if($sSite==$sCS_Site_UCLA)
                               {   //login
                               		login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                               } 
                               else
                               {
                                 _log("Not Logged In");
                               } 
                                // navigationToNALPReport();
                                navigationToStandardReport();
                                //click on NALP Reports
                         		_click(_link($tab_Nalp_Report));
                                //click on subreport type
                                _click(_link($link_generate, _near(_cell($sSubReport))));
                                // select filter data
                                selectFilterValuesNALP_Reports();
                                 //write into csv  
                                  WriteToCSV(); 
                                 //logout   
                                 logout12Twenty();
                         		_log($sNALP_Baseline1+$loop);
                       }
                        else
                       {
                                _log($sNALP_Baseline2+$loop);
                       } 
               
              }
             else
             {
                 _log("RunStatus N");
             } 
	$t.end();			
    }//close for loop
}//close function
/*********ABA Baseline*********/
/**********************************************
    Method name	:  ABA_Baseline
    Author 	 	    :	venu
    Created Date  :  12/15/15
    Description		:	This method is used to Explore Baseline ABA Reports .
    Input			  :   Excel file path,Report Name
**********************************************/
//ABA Reports Baseline
function ABA_Baseline($path,$stest)
{  //read excel datafile
    var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    
    for(var $loop=0;$loop<$data1.length;$loop++) 
    //for(var $loop=0;$loop<2;$loop++) 
    {	
        //read filter data
      	readFilterData($loop,$stest);
		var $t = _testcase($DatafileName, "ABA Baseline Test");
		$t.start();
      	_log($DatafileName);		 
              //check run status
              if($sRunStatus==$sRunStatusValue) 
              {        //check site instance type 
                       if($sSiteType==$sABA_Site_Type) 
                       {       //check site instance
                                if($sSite==$Site_Texas_Law)
                               {   //login to 12twenty
                               		login12Twenty($sUrlTexas_Law,$sUsername,$sPassword);
                               } 
                               else
                               {
                                	_log("No Action");
                               } 
                                //navigationToABAReport();
                                 navigationToStandardReport();
                                //click on ABA Reports
                         		_click(_link($tab_Aba_Report));
                                 //click on subreport generate link
                                _click(_link($link_generate, _near(_cell($sSubReport))));
                                //select filter data
                                selectFilterValuesABA_Reports();
                                //write base line results in csv   
                               	WriteToCSV(); 
                               	//logout from 12twenty
                               	logout12Twenty();
                         		_log($sABA_Baseline1+$loop);
                       }
                        else
                       {
                                _log($sABA_Baseline2+$loop);
                       }
                
			   }
			   else
			   {
				 _log("RunStatus N");
			   } 
				
     $t.end();
    }
}
/***************Class Status Baseline********************/
/**********************************************
    Method name	:  ClassStatus_Baseline
    Author 	 	    :	sarita
    Created Date  :  12/14/2015
    Description		:	This method is used to Explore Class Status Baseline Reports .
    Input			  :   Excel file path,Report Name
**********************************************/
function ClassStatus_Baseline($path,$stest)
{
  	//read excel datafile
    var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();  
        for(var $loop=0;$loop<$data1.length;$loop++) 
   	    //for(var $loop=49;$loop<50;$loop++) 
        { 
         //read filter dat
     		 readFilterData($loop,$stest);  
			var $t = _testcase($DatafileName, "Class Status Baseline Test");
			$t.start();
          //_log("No.of Rows:"+$data1.length);         	
          //_log("Datafile:"+$DatafileName);
            //check Runstatus
            if($sRunStatus==$sRunStatusValue) 
            {   //condition for site instance type
                 if($sSiteType==$sCS_FTMBA_Site_Type) 
                 {   //condition for site instance
                      if($sSite==$sSite_Harvard_FTMBA)
                     {   
                        //login to Harvard FTMBA
                     	login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                     }
                     else
                     {
                       	//Login to Texas FTMBA 
                      	login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                       	_log("Login to texas mba"+$loop);
                     } 
                   //Navigation To Class Status Reports
                   navigationToClassStatusReport(); 
                   //selectFilterValuesFTMBA();
                   //Select filter values
                   SelectFilterValues_ClassStatus();
           		 } 
                  //Choose Site instance type as BSBA Reports
                  else if($sSiteType==$sCS_BSBA_Site_Type)  
                  {
                      //Login to BSBA
                      login12Twenty($sOhio_State_BSBA,$sUsername,$sPassword);
                      //Navigation To Class Status Report
                      navigationToClassStatusReport();   
                      //selectFilterValuesBSBA();
                      //Select Filter values 
                      SelectFilterValues_ClassStatus();
                  }
                  //choose site instance type as LAW
                  else if($sSiteType==$sCS_LAW_Site_Type)
                  {
                      //Login
                      login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                      //navigation to class status reports
                      navigationToClassStatusReport();   
                      //selectFilterValuesUCLA_Law();
                     //choose filter values
                     SelectFilterValues_ClassStatus();
                 } 
                  //select site instance type as Centalized
                  else if($sSiteType==$sCS_CENTRALIZED_Site_Type)
                  { 	//select site instance
                        if($sSite==$sCS_Site_UNC)
                         {  //login to unc_centralized
                            login12Twenty($sUNC_Centralized,$sUsername,$sPassword);
                         }
                         else
                         {	//login to columbia_centralized
                             login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                         }
                    	//navigate to centralized class status reports
                       navigationToClassStatusReport();  
                       //select centralizd filter values 
                       selectFilterValuesCentralized();
                  }
                  
             //write into csv 
             WriteToCSV(); 
             //logout 12twenty 
             logout12Twenty();
               //log for if test is passed
              _log($sCS_Baseline1+$loop);
            }
            else
            {
               //log for if test is failed
               _log($CS_Baseline2+$loop);
            }
		$t.end();		
       }//close for loop
}//close function

/*******************MBA Actual Reports******************/
/**********************************************
    Method name	:  MBA_Actual
    Author 	 	    :	venu
    Created Date  :  12/21/15
    Description		:	This method is used to Explore Actual MBA Standard Reports.
    Input			  :   Excel file path,Report Name
**********************************************/
//MBA Actual Reports
function MBA_Actual($path,$stest)
{
   //read excel data file
  var $data1=_readExcelFile($path,$stest);
  //continue the script execution if failure occurs
      _continueOnError();      
     for(var $loop=0;$loop<$data1.length;$loop++) 
     //for(var $loop=29;$loop<31;$loop++)        
   	{ 
     //get filter data
     readFilterData($loop,$stest);  
	var $t = _testcase($DatafileName, "MBA Actual Test");
	$t.start();	
             
             //check the run status
    		 if($sRunStatus==$sRunStatusValue) {
               	_log("Run Status Y");
               //check site jinstance type
               if($sSiteType==$sMBA_Site_Type) 
               {  
                 //check the condition site instance type
                 if($sSite==$sSite_Texas_FTMBA)
                  {   
                    //login 
                    login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                  }
                  else if($sSite==$sSite_Texas_PTMBA)
                 {
                    //login
                    login12Twenty($sTexas_PTMBA,$sUsername,$sPassword);
                 } 
                 else
                 {
                    //login
                    login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                 }
              
                 //navigationToMBAStandardReport(); 
                 navigationToStandardReport();
                 //click on MBA Reports	
                 //_click(_link($tab_mba_report));
                 //click on sub report type
                 _click(_link($link_generate, _near(_cell($sSubReport))));
                 //select filter values
                 selectFilterValuesMBA_Standard_Reports();
     			 if(_areEqual($sSubReport,$sReport_Com)){
                          	//verify compensation report
                              WriteTempReport();
                              verifyCSVFiles();                   
                 }
                 else{                          
                   		//read excel data and verify
                          readFromCSVAndVerify() ;
                  }
                     //logout                
                     logout12Twenty();
                 _log($MBA_Actual1+$loop);
           }
           else
            {
                 _log($MBA_Actual2+$loop);
            }
        }else
        {
           _log("Runstatus N");
         } 
	$t.end();		
    }//close for loop             
}//close function
/**********************BWR Actual***********************/
/**********************************************
    Method name	:  BusinessWeek_Actual
    Author 	 	    :	venu
    Created Date  :  12/22/2015
    Description		:	This method is used to Explore Actual Business Week Reports.
    Input			  :   Excel file path,Report Name
**********************************************/
//BWR Actual Reports
function BusinessWeek_Actual($path,$stest)
{
   //read excel data file
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
     _continueOnError();    
     for(var $loop=0;$loop<$data1.length;$loop++) 
     //for(var $loop=36;$loop<40;$loop++) 
     { 
      //read filter data     
      readFilterData($loop,$stest);  
	 var $t = _testcase($DatafileName, "BusinessWeek Actual Test");
	 $t.start();	
				
                //check run status  
                if($sRunStatus==$sRunStatusValue) 
               {  
                     //check site instance type 
                     if($sSiteType==$sBWR_Site_Type) 
                     {    
                           //condition to site instance type
                           if($sSite==$sSite_Texas_FTMBA)
                            {   
                              //login 
                              login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                            }                 
                           else
                           {
                              //login
                              login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                           }
                      //navigationToBusinessWeekReport();
                      navigationToStandardReport();
                      //click on BWR reports 
                     _click(_link($tab_bwr_report));
                      //click on generate report
                     _click(_link($link_generate, _near(_cell($sSubReport))));
                     //select filter values
                      selectFilterValuesBusiness_Week_Reports();
                       if($sSubReport ==$sSubReport_BWR1)
                      { 
                          //verify 45,79,90
                          readFromCSVAndVerify(); 
                      }
                       else if($sSubReport ==$sSubReport_BWR2)
                       {
                         	Write_BWR1_Temp();
                           	verifyCSVFiles();
                       }
                       else if($sSubReport ==$sSubReport_BWR3)
                       {
                         	Write_BWR2_Temp();
                         	verifyCSVFiles();
                       }
                       else if($sSubReport==$sSubReport_BWR4 || $sSubReport ==$sSubReport_BWR5)
                       {
                         //verfiy 75,80
                         //write into temp file
                          BWR_Temp();
                         //verify temp file and actual
                          verifyCSVFiles(); 
                      }else{
                          //verify question 83-87 Reports
                          readAndVerify_BWR_Salary();
                      }                                           
                    //logout
                     logout12Twenty();
                     _log($sBWR_Actual1+$loop);  
                }
                else
                {
                    _log($sBWR_Actual2+$loop);  
                } 
          }else
          {		//run status failed
                 _log("Runstatus N");
          } 
	$t.end();		
    }//close for loop             
}//close function
/********************NACE Actual***********************/
/**********************************************
    Method name	:  NaceReports_Actual
    Author 	 	    :	sarita
    Created Date  :  12/15/2015
    Description		:	This method is used to Explore Actual NACE Reports.
    Input			  :   Excel file path,Report Name
**********************************************/
function NaceReports_Actual($path,$stest)
{
     //read excel data file
   	 var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    
         for(var $loop=0;$loop<$data1.length;$loop++) 
	     //for(var $loop=10;$loop<12;$loop++) 
        {  	  
           //read filter data	       
            readFilterData($loop , $stest);
			var $t = _testcase($DatafileName, "NACE Actual Test");
			$t.start();
				
               //check run status
               if($sRunStatus==$sRunStatusValue) 
              {
                  //check site instance type
                  if($sSiteType=="NACE Report (7)") 
                  {  
                          //condition for site instance
                           if($sSite==$sNACE_Site_Type)
                         {   
                          //login 
                         login12Twenty($sFordham_Centralized,$sUsername,$sPassword);
                         }
                         else
                         {
                          //login 
                          login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                         } 
               //navigationToNACEReport();
               navigationToStandardReport();
                //click on nace reports
                _click(_link($tab_nace_report));
                //click on generate report
               _click(_link($link_generate, _near(_cell($sSubReport))));    
                //select filter values 
               selectFilterValuesNace_Reports();
               //read ui data and verify with csv file 
               readFromCSVAndVerify(); 
               //logout 12twenty 
               logout12Twenty();
               _log($sNACE_Actual1+$loop);     
              }else
              {
              	_log($sNACE_Actual2+$loop);
              }
          }
          else
          {
          		_log("Runstatus N");
          }
	  $t.end();		
      }//close for loop
 }//close function
/*******************NALP Actual Reports******************/
/**********************************************
    Method name	:  NALP_Actual
    Author 	 	     :	venu
    Created Date  :   12/15/2015
    Description		:	This method is used to Explore Actual NALP Reports.
    Input			  :   Excel file path,Report Name
**********************************************/
//NALP Actual Reports
function NALP_Actual($path,$stest)
{
   //read excel data
   var $data1=_readExcelFile($path,$stest);
     //continue the script execution if failure occurs
      _continueOnError();    
     for(var $loop=0;$loop<$data1.length;$loop++) 
     //for(var $loop=0;$loop<2;$loop++) 
   	{		   
      //read filter data	
        readFilterData($loop,$stest); 
		var $t = _testcase($DatafileName, "NALP Actual Test");
		$t.start();					
               //check run status
               if($sRunStatus==$sRunStatusValue) 
              {  
                    //condition for site instance type 
                    if($sSiteType==$sNALP_Site_Type) 
                    {  
                         //condition for site instance type
                         if($sCS_Site_UCLA=="UCLA_Law")
                          {   
                            //login
                            login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                          }
                          else 
                         {
                            _log("Not Logged In");
                         } 
                    //navigationToNALPReport(); 
                    navigationToStandardReport();
                     //click on nalp report
                    _click(_link($tab_Nalp_Report));
                    //click on generate report
                     _click(_link($link_generate, _near(_cell($sSubReport))));
                    //select filter data
                     selectFilterValuesNALP_Reports();
                     //read ui data and verify with csv file
                     readFromCSVAndVerify() ; 
                     //logout
                     logout12Twenty();
                      _log($sNALP_Actual1+$loop);
                  }
                  else
                  {
                    _log($sNALP_Actual2+$loop);
                  }
            }
          	else
            {
           		_log("RunStatus N");   
            }
	$t.end();			
    }//close for loop             
}//close function
/****************ABA Actual***************/
/**********************************************
    Method name	 :  ABA_Actual
    Author 	 	     :	venu
    Created Date  :  12/15/2015
    Description		:	This method is used to Explore Actual ABA Reports.
    Input			  :   Excel file path,Report Name
**********************************************/
//ABA Actual Reports
function ABA_Actual($path,$stest)
{ 
   //read excel data
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    
   //for(var $loop=0;$loop<2;$loop++) 
   for(var $loop=0;$loop<$data1.length;$loop++) 
   {        
     	//read filter data   
        readFilterData($loop,$stest); 
		var $t = _testcase($DatafileName, "ABA Actual Test");
		$t.start();			   
      			//check run status
               if($sRunStatus==$sRunStatusValue) 
                {  
                      //check site instance type 
                      if($sSiteType==$sABA_Site_Type) 
                      {  
                          //condition for site instance
                           if($sSite==$Site_Texas_Law)
                            {   
                              //login to 12Twenty 
                              login12Twenty($sUrlTexas_Law,$sUsername,$sPassword);
                            }
                            else 
                           {
                              _log("Not Logged In");
                           }                           
                         //navigationToABAReport();
                         navigationToStandardReport();
                          //click on ABA Reports
                        _click(_link($tab_Aba_Report));
                          //click on subreport generate 
                         _click(_link($link_generate, _near(_cell($sSubReport))));
                         //read filter data
                         selectFilterValuesABA_Reports();
                         //read and verify baseline and actual 
                         readFromCSVAndVerify() ; 
                         //logout
                         logout12Twenty();
                        _log($sABA_Actual1+$loop);
                 }else{
                    _log($sABA_Actual2+$loop);
                  }
             }else{
                 _log("Runstatus N");
            }
	$t.end();			
    }             
}
/*************Class Status Actual**************/
/**********************************************
    Method name	 :  ClassStatus_Actual
    Author 	 	     :	sarita
    Created Date  :  12/15/2015
    Description		:	This method is used to Explore Actual Class Status Reports.
    Input			  :   Excel file path,Report Name
**********************************************/
function ClassStatus_Actual($path,$stest)
{
  //read excel data
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
      _continueOnError();    
    //for(var $loop=41;$loop<43;$loop++) 
     for(var $loop=0;$loop<$data1.length;$loop++) 
     {
      //read filter data   
       readFilterData($loop,$stest); 
	 var $t = _testcase($DatafileName, "Class Status Actual Test");
	 $t.start();
			 
      		//check run status          
       		if($sRunStatus==$sRunStatusValue) 
          	{ //check site instance type
               if($sSiteType=="FTMBA") 
               {  //condition to site instance Harvard FTMBA   
                    if($sSite==$sCS_FTMBA_Site_Type)
                   {
                      //Login to Harvard FTMBA 
                      login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                   }
                   else
                   { 
                      //Login To Texas FTMBA 
                      login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                       _log("Login to texas mba"+$loop);
                   } 
                    //Navigation To Class Status Reports 
                    navigationToClassStatusReport(); 
                    //selectFilterValuesFTMBA();
                     //Select Filter values 
                     SelectFilterValues_ClassStatus();
                } 
              //condition for site instance type
              else if($sSiteType==$sCS_BSBA_Site_Type)  
              {
                  	//Login to BSBA  
                 	login12Twenty($sOhio_State_BSBA,$sUsername,$sPassword);
                  	//Navigation to Class Reports  
                  	navigationToClassStatusReport();   
                  	//selectFilterValuesBSBA();
                    //choose filter values 
                    SelectFilterValues_ClassStatus();
              }
               //condition for site instance type is LAW
               else if($sSiteType==$sCS_LAW_Site_Type)
               {
                  //Login to UCLA_LAW   
                  login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                  //navigate to class status reports   
                  navigationToClassStatusReport();   
                  //selectFilterValuesUCLA_Law();
                     //choose filter values
                     SelectFilterValues_ClassStatus();
                }
              //condition for site instance type is Centralized
              else if($sSiteType==$sCS_CENTRALIZED_Site_Type)
             { 
                   //check site type as UNC_Centralized
                   if($sSite==$sCS_Site_UNC)
                   {  
                      //login to UNC Centralized 
                      login12Twenty($sUNC_Centralized,$sUsername,$sPassword);
                   }
                    else
                    {
                      //Login to Columbia Centralized  
                      login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                    }
                   //navigate to class status
                   navigationToClassStatusReport();  
                   //select filter values
                   selectFilterValuesCentralized();
             }
             else
             {
                _log("Excel data finish");
             }
             //read data from CSV File and verify UI data     
             readFromCSVAndVerify() ; 
            //Logout      
            logout12Twenty();
            _log($sCS_Actual1+$loop);      
        } 
        else
        {
          _log($sCS_Actual2+$loop);      
         }
		$t.end();		
     }//close for loop
}//close function

   /*************Navigate Reports**************/
/**********************************************
    Method name	:  navigationToStandardReport
    Author 	 	    :	venu
    Created Date  :   12/15/2015
    Description		:	This method is used to navigate Standard Reports tab.
    Input			  :   NA
**********************************************/
//Navigate to Reports
function navigationToStandardReport()
{   
    //click on Report 
	_click(_link($link_Report));
    //click on Standard Reports
	_click(_link($tab_Standard_Report));	
}
/**********************************************
    Method name	:  navigationToClassStatusReport
    Author 	 	    :	sarita
    Created Date  :   12/14/2015
    Description		:	This method is used to navigate Class Status tab.
    Input			  :   NA
**********************************************/
function navigationToClassStatusReport()
{
  	//click on Report link
	_click(_link($link_Report));
    //click on 12Twenty Reports
	_click(_link($tab_12twenty_Reports));
    //Click on Student Outcomes Subreport
	_click(_link($link_student_Outcomes));
}

          /**************Select Filter Data*************/
/**********************************************
    Method name	:  selectFilterValuesMBA_Standard_Reports
    Author 	 	    :	venu
    Created Date  :  12/21/15
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
**********************************************/
//get the filter data from Data file
function selectFilterValuesMBA_Standard_Reports()
{ 	//read Graduataion Year
	_setSelected(_select($drp_dwn_gradYearId), $sGradYear);
    //read GraduationTerm
	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);
	_log("Site instance:"+$sSite);
    //verify if Site Type as Texas FTMBA
    if($sSite==$sSite_Texas_PTMBA)
    {
      //select Program
      _setSelected(_select($drp_dwn_programId), $sProgram);
      _log("ProgramId:"+$sProgram);
    }
	//condition to select jobphase and joint degree
    if($sSite != $sSite_Texas_PTMBA)
    {  //select jobphase
        _setSelected(_select($drp_dwn_job_PhaseId),$sJobPhase);
		//select joint degree
        _setSelected(_select($drpdwn_jointDegree), $sJointDegree);
    }
	 //click on Gernerate Report Button
    _click(_submit($generateReport));
}
/**********************************************
    Method name	:  selectFilterValuesBusiness_Week_Reports
    Author 	 	    :	venu
    Created Date  :  12/22/15
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
**********************************************/
//To Read BWR Data File
function selectFilterValuesBusiness_Week_Reports()
{ 	//read Graduation Year
	_setSelected(_select($drp_dwn_gradYearId), $sGradYear);
  	//read Graduation Term
	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);	
  	//click on Gernerate Report Button
    _click(_submit($generateReport));
}
/**********************************************
    Method name	:  selectFilterValuesNALP_Reports
    Author 	 	    :	venu
    Created Date  :  12/15/15
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
**********************************************/
//read NALP data file
function selectFilterValuesNALP_Reports()
{	//read Graduation year
	_setSelected(_select($drp_dwn_gradYearId), $sGradYear);
  	//read GraduationTerm from data sheet
	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);
  	//read OfferTiming from data sheet
    _setSelected(_select($drpdwn_offertiming), $sOfferTiming);  
  	//condtion to select cutoff date
   /* if($sCutoffDate == $sDate)
      {
        _setValue(_textbox($txtbox_cutoffdate), "");
      }
    _click(_submit($generateReport));*/
}
/**********************************************
    Method name	:  selectFilterValuesNace_Reports
    Author 	 	    :	sarita
    Created Date  :  12/15/15
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
**********************************************/
//read NACE Filter data file
function  selectFilterValuesNace_Reports()
{	//read Graduation Year from data sheet
  	_setSelected(_select($drp_dwn_gradYearId), $sGradYear);
  	//read Graduation Term
	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);
  //condition to select Program
  if($sProgram==$sPro)
  {
    //click on Button Department all
    _click(_button($btn_departmentAll));
    //Set the value of txt
    _setValue(_textbox($txt_departSearch), $sSearch_Nace);
    //select check box
    _check(_checkbox($sProgram));
  }
 //condition to select college
  if($sCollege==$sColl)
  { 
    //click on all Button	
    _click(_button($btn_all));
    //select check box
    _check(_checkbox($sCollege));
  }
  	//Select the DegreeId
	_setSelected(_select($drp_dwn_degreeId),  $sDegreelevel);
  	//choose Reporting Major Radio Button
	_check(_radio($sReportingMajor));
   //click on generate report button
	_click(_submit($generateReport));
}
/**********************************************
    Method name	:  selectFilterValuesABA_Reports
    Author 	 	    :	venu
    Created Date  :   12/15/15
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
**********************************************/
//select ABA reports filter data
function selectFilterValuesABA_Reports()
{	//Select Graduation YearId
	_setSelected(_select($drp_dwn_gradYearId), $sGradYear);
  	//Select Graduation TermId
	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);
  	//select offertiming from data sheet
    _setSelected(_select($drpdwn_offertiming), $sOfferTiming);
    //condition to select cutoff date
     /* if($sCutoffDate == $sDate)
      { //select cutoff date 
        _setValue(_textbox($txtbox_cutoffdate), "");
      }*/
  //click on generate report
   _click(_submit($generateReport));
}
/**********************************************
    Method name	:  SelectFilterValues_ClassStatus
    Author 	 	    :	sarita
    Created Date  :  12/14/15
    Description		:	Select filter data from excel for class status (FTMBA/BSBA/UCLA_LAW)
    Input			  :   NA
**********************************************/
  //Select Filter data for ClassStatus Reports
   function SelectFilterValues_ClassStatus()
   {
    //Click on Graduation Year 
   	_click(_button($default_gradYear));
    //Select Graduation year checkbox 
	_check(_checkbox($sGradYear));
    //Uncheck the default Graduation Year 
   _uncheck(_checkbox($default_gradYear));
    //Select Graduation Term 
  	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);
  	//_setSelected(_select("AssignedAdvisorId"), "All");
    //Condition to select DegreeLevel and UndergradMajor
    if($sSiteType==$sCS_BSBA_Site_Type)
    {
      _setSelected(_select($drp_dwn_degreeId), $sDegreelevel);
      _setSelected(_select($drp_dwn_underGradMajor),$sUndergradMajor);
  	} 
    //select JobPhase 
  	_setSelected(_select($drp_dwn_job_PhaseId), $sJobPhase);
    //select work authorization
    _setSelected(_select($drp_dwn_workAuthId),$sWorkAuth);
     //select Employee
    _setSelected(_select($drp_dwn_empType), $sEmpType);
     //select Include rumor job
    _setSelected(_select($drp_dwn_rumorJob), $sRumorJob);
     //select include report
    _setSelected(_select($drp_dwn_includeReport), $sIncludeRoport);
     //select offertiming
    _setSelected(_select($drp_dwn_offerTimingId),$sOfferTiming);
    //_setSelected(_select($underGradMajor),$sUndergradMajor);
     //click on generate report
    _click(_button($getResult));
  }
/**********************************************
    Method name	:  selectFilterValuesCentralized
    Author 	 	    :	sarita
    Created Date  :  12/14/15
    Description		: select filter data from excel for Centralized	class status(Columbia/UNC)
    Input			  :   NA
**********************************************/
function selectFilterValuesCentralized()
{   //Click on Graduation Year 
   	_click(_button($default_gradYear));
    //select graduation year
	_check(_checkbox($sGradYear));
    //uncheck the default graduation yea
 	_uncheck(_checkbox($default_gradYear));
   //select graduation term
	_setSelected(_select($drp_dwn_gradTerm), $sGradTerm);
	//_setSelected(_select("AssignedAdvisorId"), "All");
    //select degree level
	_setSelected(_select($drp_dwn_degreeId), $sDegreelevel);
    //condition to select jobphase
     if($sJobPhase!=$sCS_Subreport)
      {   	//select jobphase
    		_setSelected(_select($drp_dwn_job_PhaseId), $sJobPhase);
      }
   //select work authorization 
    _setSelected(_select($drp_dwn_workAuthId),$sWorkAuth);
   //select Employee Type
    _setSelected(_select($drp_dwn_empType), $sEmpType);
   //select rumor job
    _setSelected(_select($drp_dwn_rumorJob), $sRumorJob);
   //select Include report
    _setSelected(_select($drp_dwn_includeReport), $sIncludeRoport);
   //select offer timing
    _setSelected(_select($drp_dwn_offerTimingId),$sOfferTiming);
   //choose the undergradMajor
    _setSelected(_select($drp_dwn_underGradMajor),$sUndergradMajor);
   //select college
    _setSelected(_select($drp_dwn_collegeId), $sCollege);
      _log("Site instance:"+$sSite);
    //condition to select Department
     if($sSite==$sCS_Site_CC)
    {	//Select department
    	_setSelected(_select($drp_dwn_department),$sDepartment);
    }
  	//click on generate button
    _click(_button($getResult));
}
     /************Logout*********/
/**********************************************
    Method name	:  logout12Twenty
    Author 	 	    :	sarita
    Created Date  :  12/14/15 
    Description		:	This Method is used to Logout from 12Twenty.
    Input			  :   NA
**********************************************/
//logout from 12twenty application
function logout12Twenty(){
    //click on icon
	_click(_span($logout_icon));
    //click logout button
	_click(_link($btn_Logout));
}
/****************Write,Read and Verify*******************/
/**********************************************
    Method name	:  WriteToCSV
    Author 	 	    :	venu
    Created Date  :  12/15/15
    Description		:	This Method is used to get table content from UI,push into array and write into csv.
    Input			  :   NA
**********************************************/
function WriteToCSV(){
	//read data from app    	
    _log("Enter");
    //get table content from ui
	$Tabledata = _getTableContents(_table($table_id));
    //push data into array
    for (var $row = 0; $row < $Tabledata.length; $row++) 
    {
      	//assign table data into an array length
      	$arr[$arr.length] = $Tabledata[$row];
    }
    //write functionality
     Write();  	   	
}
/**********************************************
    Method name	:  Write
    Author 	 	    :	sarita
    Created Date  :  12/14/15
    Description		:	This Method is used to write into csv.
    Input			  :   NA
**********************************************/
// write ui data into csv file
  function Write()
 {  
      if(_exists($path_baseline))
      {//condition for to check if file exists or not
        if(_exists($path_baseline+$DatafileName+".csv"))
        {	//if exists delete file
        	_deleteFile($path_baseline+$DatafileName+".csv");	
        }
          	_log("Enter1");
         	//write in to csv file
         	_writeCSVFile($Tabledata,$path_baseline+$DatafileName+".csv");
        	_log(1); 
      }
      else
      {
           //create a directory and write in to csv file
           var $file = new java.io.File($sBaseline_dir).mkdir();
           _writeCSVFile($Tabledata,$path_baseline+$DatafileName+".csv");
           _log(2);
      }
  }   
/**********************************************
    Method name	:  WriteIntoMBA_Compensation_Report
    Author 	 	    :	venu
    Created Date  :  12/21/15
    Description		:	This Method is used to write into MBA Compensation Reports(Baseline).
    Input			  :   NA
**********************************************/
//default table id
var $table_id1 = "report-data-";
//write mba standard reports into csv
function WriteIntoMBA_Compensation_Report()
{      
  		if(_exists($path_baseline+$DatafileName+".csv"))
        {	//if file exists delete the file
        	_deleteFile($path_baseline+$DatafileName+".csv");	
        }else{
        	_log("File is not exist");
        }
     	 //fetch no.of tables
      	var $tableCount=_count("_table","/report-data/");
      	_log($tableCount)
        //read each table data from UI  
        for(var $k=0;$k<$tableCount;$k++)
        {  //incremented table index value 
            var $tableIndex=$k+1;
            //get table data
            $Tabledata = _getTableContents(_table($table_id1+$tableIndex));
            //push table data into an array
            for (var $row = 0; $row < $Tabledata.length; $row++) {
              //assign table data into an array length
              $arr[$arr.length] = $Tabledata[$row];
          }
          //write into csv 
			Write_Compensation();
        }   
}
/**********************************************
    Method name	:  Write_Compensation
    Author 	 	    :	venu
    Created Date  :  01/19/16
    Description		:	This Method is used to write into MBA Compensation Reports.
    Input			  :   NA
**********************************************/
 function Write_Compensation()
 {  
       if(_exists($path_baseline))
      {       
          	_log("Enter1");
         	//write in to csv file
         	_writeCSVFile($Tabledata,$path_baseline+$DatafileName+".csv");
      }
      else
      {
           //create a directory and write in to csv file
           var $file = new java.io.File($sBaseline_dir).mkdir();
           _writeCSVFile($Tabledata,$path_baseline+$DatafileName+".csv");
      }
 }   
/**********************************************
    Method name	:  readFromCSVAndVerify
    Author 	 	    :	venu
    Created Date  :  12/15/15
    Description		:	This Method is used to get table content from UI,read baseline file and verify.
    Input			  :   NA
**********************************************/
//read data from ui and verify with csv
function readFromCSVAndVerify(){
      
    //get data from UI
	$actual = _getTableContents(_table($table_id));
    //get data from CSv
	$expected =_readCSVFile($path_baseline+$DatafileName+".csv", "," );
    //verify functionality 
    Verify();
}
/**********************************************
    Method name	:  Verify
    Author 	 	    :	sarita
    Created Date  :  12/14/15
    Description		:	This Method is used to Verify.
    Input			  :   NA
**********************************************/
//verify functionality
function Verify(){  
  	//Iterate the loop to verify Actual and Expecetd results base d on rows and columns
	for (var $i=0; $i<$actual.length && $i<$expected.length; $i++){
			for (var $j=0; $j<$actual[$i].length && $j<$expected[$i].length; $j++)
	        {	//verify actual data equal to expected data
				if($actual[$i][$j]==$expected[$i][$j])
	            {
	              _log("Expected: " + $expected[$i][$j]+"Actual "+$actual[$i][$j]);
			     }
	          else
	            {
                  //condition for if file exits or not
                  if(_fileExists($path_actual+$DatafileName+".csv"))
                  {
                     //update data if error occurs
                     updateOnError($i,$j,$actual[$i][$j], $expected[$i][$j]);
                  }
                  else
                  {
                      //create a directory
                      var $file = new java.io.File($sAcual_dir).mkdir();
                        //copy source file to destination file
                      _copyFile($path_baseline+$DatafileName+".csv", $path_actual+$DatafileName+".csv");
                    //update data if any errors occured 
                    updateOnError($i,$j,$actual[$i][$j], $expected[$i][$j]);
                    //compare baseline ,actual if failure occurs to continue call onScriptFailure.
                   _assertEqual($actual[$i][$j],$expected[$i][$j]);
                  }
	              _log("Verificaton failed :=Expected data in failed test case " + $expected[$i][$j]+"Actual "+$actual[$i][$j]);
	           }
             // _assertEqual($actual[$i][$j],$expected[$i][$j]);
	              _log("Expected: " + $expected[$i][$j]+"Actual "+$actual[$i][$j]);  
	    }
	}
}
/**********************************************
    Method name	:  updateOnError
    Author 	 	    :	sarita
    Created Date  :  12/15/15
    Description		:	This Method is used to update error data.
    Input			  :   NA
**********************************************/
//update csv if data varied
function updateOnError($x,$y,$actualData,$expectedData)
{
 //read csv actual file 
 var $a=_readCSVFile($path_actual+$DatafileName+".csv");
  //update data actual data and expeted data
  $a[$x][$y] = $actualData+"***"+$expectedData;
  //write into actual file
  _writeCSVFile($a,$path_actual+$DatafileName+".csv",true);
  
}

/**********************************************
    Method name	:  onScriptFailure
    Author 	 	    :	sarita
    Created Date  :  12/15/15
    Description		:	This Method is used to continue verify data if failure occurs.
    Input			  :   NA
**********************************************/
//continue the verify functionality if failure error occured
function onScriptFailure($e)
{
   //_logExceptionAsFailure($e);
   _log("Script failing for Report:"+$DatafileName+".csv");
   return true; // Forces Sahi to continue execution and not stop at error. Since Sahi Pro V4.3
}


/**********************************************
    Method name	:  WriteTempReport
    Author 	 	    :	venu
    Created Date  :  12/21/15
    Description		:	This Method is used to write MBA Compensation reports into Temporary file to verify with baseline results.
    Input			  :   NA
**********************************************/
//write into temporary file
function WriteTempReport(){
       //fetch no.of tables
        var $tableCount=_count("_table","/report-data/");
         _log($tableCount)
            //read table data
            for(var $k=0;$k<$tableCount;$k++){   
               //increment the table index
                var $tableIndex=$k+1;    
                //get  the contents of table
                $Tabledata1 = _getTableContents(_table($table_id1+$tableIndex));
                //push into an array	
              	for (var $row = 0; $row < $Tabledata1.length; $row++) {
                   //assign table data into an array length
                  $arr[$arr.length] = $Tabledata1[$row];
                }
                _log($Tabledata1) ;
                //condition to verify temporaty directory
                if(_exists($sTemp_dir))
                { 
                  _log("Enter1");
                  //write Table data into Temporary file 
                  _writeCSVFile($Tabledata1,$path_temp+$DatafileName+".csv");
                }
                else
                {
                  //Create a Temporary Directory 
                  var $file = new java.io.File($sTemp_dir).mkdir();
                   //write into temporary file
                  _writeCSVFile($Tabledata1,$path_temp+$DatafileName+".csv");
                }                                                         
        }           
}

/**********************************************
    Method name	:  verifyCSVFiles
    Author 	 	    :	venu
    Created Date  :  12/21/15
    Description		:	This Method is used to read MBA Compensation reports actual,expected results from csv and verify.
    Input			  :   NA
**********************************************/
//read and verify MBA table data
function verifyCSVFiles(){ 
    //get data from temporary file
	$actual = _readCSVFile($path_temp+$DatafileName+".csv", "," );
    //get data from baseine csv file
	$expected =_readCSVFile($path_baseline+$DatafileName+".csv", "," );
    //verify data
    Verify();
  //delete temporary files if exists  
  // full path of folder inside which we want to delete for files and folders
  var $dir = new java.io.File($sTemp_dir);  
 if ($dir.exists()) 
 { //get no.of files in directory
	var $files = $dir.listFiles();
    //condition to check no.of files
    if($files.length>0)
    { 
      for (var $i=0; $i<$files.length; $i++) 
      {//delete file
        $files[$i].delete();	
      }
    }
}          
else {
	_log('Directory does not exist. Nothing to enumerate');
}
//delete Directory  
$dir.delete();
}

/************************Write into BWR reports diff table ids(83-87)******************************/
/**********************************************
    Method name	:  WriteToCSV_BWR_Salary
    Author 	 	    :	venu
    Created Date  :  12/23/15
    Description		:	This Method is used to Write BWR reports into csv from Q.83-Q.87.
    Input			  :   NA
**********************************************/
//Read and write Business Week Report data into CSv
function WriteToCSV_BWR_Salary(){	   	        
  		//Get the Salary Table Contents
        $Tabledata = _getTableContents(_table($table_id2));
  		//Push table into an array
        for (var $row = 0; $row < $Tabledata.length; $row++) {
          $arr[$arr.length] = $Tabledata[$row];
        }
  		//write into CSV
        Write();
}
/******************Verify BWR Reports(83-87)*******************/
/**********************************************
    Method name	:  readAndVerify_BWR_Salary
    Author 	 	    :	venu
    Created Date  :  12/23/15
    Description		:	This Method is used to verify BWR reports from Q.83-Q.87.
    Input			  :   NA
**********************************************/
//read BWR_salary reports
function readAndVerify_BWR_Salary()
{  //Get table data from UI
    $actual = _getTableContents(_table($table_id2));      
  	//read csv file data 
	$expected =_readCSVFile($path_baseline+$DatafileName+".csv", "," );
    //verify
    Verify();	
}
/**************Get BWR(Q.75,Q.80) List Data****************/
/**********************************************
    Method name	:  writeBWR_List
    Author 	 	    :	venu
    Created Date  :  12/24/15
    Description		:	This Method is used to write BWR list format reports into csv from Q.75, 77-78,80-82.
    Input			  :   NA
**********************************************/
//Get the Unorderd list data
function writeBWR_List()
{
     //var $listdata = [];
     //collect no.of unorderd list data in UI
     var $listdata=_collectAttributes("_listItem","/.*/","sahiText",_in(_list($list_data))); 
      _log($listdata.length);
  	 //write into CSV	
     _writeCSVFile([$listdata],$path_baseline+$DatafileName+".csv");
}
/**************************write bwr(Q.75,Q.80)into temp file**************************/
/**********************************************
    Method name	:  BWR_Temp
    Author 	 	    :	Venu
    Created Date  :  12/24/15
    Description		:	This Method is used to write BWR (table & list Q.75, 77-78,80-82) reports into temporary csv.
    Input			  :   NA
**********************************************/
//Write BWR Reports(Q.75/80) into temporary file
function BWR_Temp()
{
  	var $contents = [];
   //get the table contents
	$contents = _getTableContents(_table($table_id));
    _log($contents.length);
    //write into temporary csv file
   	_writeCSVFile($contents, $path_temp+$DatafileName+".csv");  
    //get the listitem data
    var $listdata=_collectAttributes("_listItem","/.*/","sahiText",_in(_list($list_data))); 
    //append to existing csv file
    _writeCSVFile([$listdata], $path_temp+$DatafileName+".csv");
}
/******************************************************/
/**********************************************
    Method name	:  Write_BWR1
    Author 	 	    :	venu
    Created Date  :  
    Description		:	write bwr Top 15 employers reports into csv file
    Input			  :   NA
**********************************************/
function Write_BWR1(){
	// Here we are collecting all listitems
	var $rows = _collect("_listItem", "/.*/", _in(_list($sList_data)));  
  	_log("Rows:"+$rows.length);
  	// creating an array
  	var $array = new Array($rows.length); 
    for (var $i = 0; $i < $rows.length; $i++) 
    {	
        _log($i);
      	// extracting value of span from each listitem
        var $items = _collectAttributes("_span", "/.*/", "sahiText", _in($rows[$i]));
      	// putting the values of span in an arrya
        $array[$i] = $items;
    }
  	_log($array);
  if(_fileExists($path_baseline+$DatafileName+".csv"))
  {
  		_deleteFile($path_baseline+$DatafileName+".csv");
  }
  	// writing into csv file 
  	_writeCSVFile($array, $path_baseline+$DatafileName+".csv");    
}
/**********************************************
    Method name	:  Write_BWR2
    Author 	 	    :	venu
    Created Date  :  
    Description		:   write bwr interships reports into csv file	
    Input			  :   NA
**********************************************/
function Write_BWR2(){
  	// Here we are collecting all listitems
	var $rows = _collect("_listItem", "/.*/", _in(_list($sList_data)));  
  	// creating an array
  	 $array = new Array($rows.length); 
    for (var $i = 0; $i < $rows.length; $i++) 
   {	
        _log($i);
      	// extracting value of span from each listitem
        var $items = _collectAttributes("_span", "/.*/", "sahiText", _in($rows[$i]));
      	// putting the values of span in an arrya
        $array[$i] = $items;
    }
  	_log($array);
   if(_fileExists($path_baseline+$DatafileName+".csv"))
  {
  		_deleteFile($path_baseline+$DatafileName+".csv");
  }
  	// writing into csv file 
  	_writeCSVFile($array, $path_baseline+$DatafileName+".csv");     
     
     var $rowCount=_fetch(_table($table_id).rows.length);
    _log("Enter");
    //push data into array
  	var $array1=[];
     $Tabledata = _getTableContents(_table($table_id));
    for (var $row = 1; $row<$Tabledata.length; $row++) 
    {
             $array1[$array1.length] = $Tabledata[$row]; 
            _log($row+":"+$Tabledata[$row]); 
         	//_writeCSVFile($array1[$row], $path_baseline+$DatafileName+".csv");
    }
   
      
   _writeCSVFile($array1, $path_baseline+$DatafileName+".csv");
       //_writeCSVFile($Tabledata, $path_baseline+$DatafileName+".csv"); 
}
/**********************************************
    Method name	:  Write_BWR1_Temp
    Author 	 	    :	venu
    Created Date  :  
    Description		:	write bwr Top 15 Employers into temporay file
    Input			  :   NA
**********************************************/
function Write_BWR1_Temp(){
	// Here we are collecting all listitems
	var $rows = _collect("_listItem", "/.*/", _in(_list($sList_data)));  
  	_log("Rows:"+$rows.length);
  	// creating an array
  	var $array = new Array($rows.length); 
    for (var $i = 0; $i < $rows.length; $i++) 
    {	
        _log($i);
      	// extracting value of span from each listitem
        var $items = _collectAttributes("_span", "/.*/", "sahiText", _in($rows[$i]));
      	// putting the values of span in an arrya
        $array[$i] = $items;
    }
  	_log($array);
   if(_exists($sTemp_dir))
                { 
                  _log("Enter1");
                  //write Table data into Temporary file 
  				_writeCSVFile($array, $path_temp+$DatafileName+".csv");    
                }
                else
                {
                  //Create a Temporary Directory 
                  var $file = new java.io.File($sTemp_dir).mkdir();
                   //write into temporary file
  					_writeCSVFile($array, $path_temp+$DatafileName+".csv");    
                }                 
}
/**********************************************
    Method name	:  Write_BWR2_Temp
    Author 	 	    :	venu
    Created Date  :  
    Description		:	write bwr interships reports into temporary file
    Input			  :   NA
**********************************************/
function Write_BWR2_Temp(){
  		// Here we are collecting all listitems
	var $rows = _collect("_listItem", "/.*/", _in(_list($sList_data)));  
  	_log("Rows:"+$rows.length);
  	// creating an array
  	$array = new Array($rows.length); 
    for (var $i = 0; $i < $rows.length; $i++) 
    {	
        _log($i);
      	// extracting value of span from each listitem
        var $items = _collectAttributes("_span", "/.*/", "sahiText", _in($rows[$i]));
      	// putting the values of span in an arrya
        $array[$i] = $items;
    }
  	_log($array);
   if(_fileExists($path_baseline+$DatafileName+".csv"))
  {
  		_deleteFile($path_baseline+$DatafileName+".csv");
  }
  	// writing into csv file 
    _writeCSVFile($array, $path_temp+$DatafileName+".csv");     
     var $rowCount=_fetch(_table($table_id).rows.length);
    _log("Enter");
    //push data into array
  	var $array1=[];
     $Tabledata = _getTableContents(_table($table_id));
    for (var $row = 1; $row<$Tabledata.length; $row++) 
    {
             $array1[$array1.length] = $Tabledata[$row]; 
            _log($row+":"+$Tabledata[$row]); 
         	//_writeCSVFile($array1[$row], $path_baseline+$DatafileName+".csv");
    }
   _writeCSVFile($array1, $path_temp+$DatafileName+".csv");
       //_writeCSVFile($Tabledata, $path_baseline+$DatafileName+".csv"); 
}
